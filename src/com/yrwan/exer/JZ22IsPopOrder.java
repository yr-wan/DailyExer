package com.yrwan.exer;

import java.util.Stack;

/**
 * 22.输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否为该栈的弹出顺序，假设压入栈的所有数字均不相等。
 * 例如序列1,2,3,4,5是某栈的压入顺序，序列4，5,3,2,1是该压栈序列对应的一个弹出序列，
 * 但4,3,5,1,2就不可能是该压栈序列的弹出序列。（注意：这两个序列的长度是相等的）
 * 思路：用栈来压入弹出元素，相等则出栈。
 * 
 * @author wyran
 *
 */
public class JZ22IsPopOrder {
	public static void main(String[] args) {
		int[] a = { 1, 2, 3, 4, 5 };
		int[] b = { 4, 5, 3, 2, 1 };
		System.out.println(isPopOrder(a, b));
	}

	public static boolean isPopOrder(int[] a, int[] b) {
		if (a == null || b == null) {
			return false;
		}
		Stack<Integer> stack = new Stack<>();
		int index = 0;
		for (int i = 0; i < a.length; i++) {
			stack.push(a[i]);
			while (!stack.isEmpty() && stack.peek() == b[index]) {
				stack.pop();
				index++;
			}
		}
		return stack.isEmpty();
	}
}
